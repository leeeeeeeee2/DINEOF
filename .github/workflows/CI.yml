name: Build master

on: [push, pull_request]

jobs:
  build-ubuntu:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    
    - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

    - name: Install dependencies
      run: sudo apt update && sudo apt-get install gfortran make libarpack2-dev libnetcdf-dev libnetcdff-dev &&sudo apt-get install libblas-dev liblapack-dev &&sudo apt-get install libarpack2-dev libparpack2-dev &&sudo apt-get install libarpack++2-dev && sudo apt-get install openmpi-bin openmpi-doc libopenmpi-dev && sudo apt install libblas-dev liblapack-dev

    - name: Configure
      run: cp config.mk.template config.mk

    - name: Compile
      run: make

    - name: Testrun1
      run: export PATH=$PATH:$PWD && cd SmallExample && dineof dineof.init
    - name: Testrun3
      run: export PATH=$PATH:$PWD && cd SmallExample && dineof dineof.init
    - name: Testrun3
      run: export PATH=$PATH:$PWD && cd SmallExample && dineof dineof.init
      
  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
#           - { sys: mingw32, env: i686 }
#           - { sys: ucrt64,  env: ucrt-x86_64 }  # Experimental!
#           - { sys: clang64, env: clang-x86_64 } # Experimental!
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: mingw-w64-${{matrix.env}}-openssl
      - shell: msys2  {0}
        run: |
          export "PATH=C:\%MSYS2_DIR%\%MSYSTEM%\bin;C:\%MSYS2_DIR%\usr\bin;%PATH%"
      - shell: msys2  {0}
        run: |
          curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz
          curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig
      - shell: msys2  {0}
        run: |
          pacman -U --noconfirm msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz
          REM pacman -Syu --noconfirm
          REM pacman -Su --noconfirm
          pacman -S --needed --noconfirm mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-make
          pacman -S --needed --noconfirm mingw-w64-x86_64-openblas
          pacman -S --needed --noconfirm mingw-w64-x86_64-arpack mingw-w64-x86_64-lapack mingw-w64-x86_64-szip
          pacman -S --needed --noconfirm mingw-w64-x86_64-hdf5
          gcc --version
      - shell: msys2  {0}
        run: |
          wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-4.7.4.tar.gz
          tar -zxf netcdf-c-4.7.4.tar.gz
          cd netcdf-c-4.7.4/
          bash -c './configure --disable-shared --enable-static  --disable-dap  --disable-utilities --prefix=/mingw64/'
          make
          make install
          cd ..
          wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.5.2.tar.gz
          tar -zxf netcdf-fortran-4.5.2.tar.gz
          cd netcdf-fortran-4.5.2
          bash -c './configure --disable-shared --enable-static   --disable-dependency-tracking LIBS="-lhdf5_hl -lhdf5 -lm -lz" --prefix=/mingw64/  FCFLAGS="-w -fallow-argument-mismatch -O2"'
          make
          make install
          cd ..   
          pwd
          ls
          bash -c 'nc-config --all'
          bash -c 'nf-config --all'
          cp config.mk.template config.mk
          bash -c 'make OS=mingw LIBS="-L/usr/lib -llapack -larpack -lopenblas $(nf-config --flibs) -lszip"'
          bash -c '(cd SmallExample/; ../dineof.exe dineof.init)'


#     - name: Build
#       run: echo ${{ github.sha }} > Release.txt
      
#     - name: Test
#       run: cat Release.txt
      
#     - name: Release
#       uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs/tags/')
#       with:
#         files: |
#           dineof
#           Release.txt
          
# build-windows:

#   runs-on: windows-latest
#   steps:
#   - uses: actions/checkout@v2
#   - uses: numworks/setup-msys2@v1

#   - run: msys2do uname -a

#   - name: Install compiler
#     run: msys2do pacman -S --needed --noconfirm mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-make tar

#   - name: Install OPENBLAS
#     run: msys2do pacman -S --needed --noconfirm mingw-w64-x86_64-openblas

#   - name: Install dependencies
#     run: msys2do pacman -S --needed --noconfirm mingw-w64-x86_64-arpack mingw-w64-x86_64-hdf5 mingw-w64-x86_64-lapack mingw-w64-x86_64-szip

#   - name: Install NetCDF
#     run: |
#        msys2do get https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-4.7.4.tar.gz
#        msys2do tar -zxf netcdf-c-4.7.4.tar.gz
#        msys2do cd netcdf-c-4.7.4/
#        msys2do ./configure --disable-shared --disable-dap  --disable-utilities --prefix=/mingw64/
#        msys2do make
#        msys2do make install
#        msys2do cd ..        

#   - name: Install NetCDF-Fortran
#     run: |
#       msys2do wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-fortran-4.5.2.tar.gz
#       msys2do tar -zxvf netcdf-fortran-4.5.2.tar.gz
#       msys2do cd netcdf-fortran-4.5.2
#       msys2do ./configure --disable-shared  --disable-dependency-tracking LIBS='-lhdf5_hl -lhdf5 -lm -lz' --prefix=/mingw64/
#       msys2do make
#       msys2do make install

#   - name: Configure
#     run: msys2do cp config.mk.template config.mk

#   - name: Compile
#     run: msys2do make STATIC=on OS=mingw LIBS="-L/usr/lib -llapack -larpack -lopenblas $(nf-config --flibs) -lszip"

